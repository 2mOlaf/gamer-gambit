apiVersion: apps/v1
kind: Deployment
metadata:
  name: kallax
  namespace: gamer-gambit
  labels:
    app: kallax
    component: discord-bot
    version: v1.0.0
spec:
  replicas: 1  # Discord bots should typically run as single instance
  strategy:
    type: Recreate  # Ensure only one instance runs at a time
  selector:
    matchLabels:
      app: kallax
      component: discord-bot
  template:
    metadata:
      labels:
        app: kallax
        component: discord-bot
        version: v1.0.0
    spec:
      containers:
      - name: kallax
        image: python:3.11-slim
        imagePullPolicy: Always
        workingDir: /app
        command:
          - /bin/bash
          - -c
          - |
            echo "Installing system dependencies..."
            apt-get update && apt-get install -y git
            echo "Installing Python dependencies..."
            pip install --no-cache-dir -r requirements.txt
            echo "Starting Kallax Discord Bot..."
            python bot.py
        env:
        # Load configuration from secrets
        - name: DISCORD_TOKEN
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: DISCORD_TOKEN
        - name: DISCORD_GUILD_ID
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: DISCORD_GUILD_ID
              optional: true
        - name: DATABASE_PATH
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: DATABASE_PATH
        - name: BGG_API_BASE_URL
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: BGG_API_BASE_URL
        - name: COMMAND_PREFIX
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: COMMAND_PREFIX
        - name: DEFAULT_WEEKLY_STATS_CHANNEL
          valueFrom:
            secretKeyRef:
              name: kallax-config
              key: DEFAULT_WEEKLY_STATS_CHANNEL
        - name: STEAM_API_KEY
          valueFrom:
            secretKeyRef:
              name: kallax-api-keys
              key: STEAM_API_KEY
              optional: true
        - name: XBOX_API_KEY
          valueFrom:
            secretKeyRef:
              name: kallax-api-keys
              key: XBOX_API_KEY
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: source-code
          mountPath: /app
        - name: data-volume
          mountPath: /app/data
        # Health checks
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "ps aux | grep -v grep | grep 'python bot.py'"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "ps aux | grep -v grep | grep 'python bot.py' && test -f /app/data/kallax.db"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 5
      # Graceful shutdown
      terminationGracePeriodSeconds: 30
      volumes:
      - name: source-code
        nfs:
          server: mimisbrunnr.gradin.lan
          path: /Projects/GitHub/2mOlaf/gamer-gambit/discord/kallax
      - name: data-volume
        persistentVolumeClaim:
          claimName: kallax-data
      restartPolicy: Always
---
# PVC using cluster's default storage class
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kallax-data
  namespace: gamer-gambit
  labels:
    app: kallax
    component: storage
spec:
  accessModes:
    - ReadWriteMany  # NFS supports multiple readers/writers
  resources:
    requests:
      storage: 1Gi
  # storageClassName: nfs-retain  # Use cluster's retain storage class
  # Leave storageClassName empty to use default cluster storage class
